{"version":3,"sources":["constants/Menu.js","strings/strings.js","dark-theme-context/DarkThemeContext.js","components/footer/Footer.js","actions/actions.js","actions/action-types.js","function/index.js","components/header/Header.js","components/dark-theme-wrapper/DarkThemeWrapper.js","components/loading/Loading.js","store/selectors.js","components/upcoming-movies/UpcomingMovies.js","components/movies-info/MoviesInfo.js","components/movielist/Movielist.js","components/movie-card/MovieCard.js","components/new-movies/NewMovies.js","components/popular-movies/PopularMovies.js","components/search-movies/SearchMovies.js","components/navigation/Navigation.js","components/app/App.js","store/index.js","index.js","assets/logo.png"],"names":["media","src","alt","href","apiKey","strings","LocalizedStrings","uk","enterMovie","notFound","main","new","popular","input","byAlfabet","byPopular","byRate","dark","light","soon","best","result","socialNetwork","genre","date","rate","ru","en","DarkThemeContext","createContext","LanguageContext","Footer","useContext","isDarkTheme","className","map","value","key","target","getMoviesAction","movies","type","payload","getImageAction","firstPartUrl","getImageCardAction","imgCardUrl","getGenreAction","genres","searchMovieAction","copyResults","requestFunction","argument","a","fetch","requestAllMovies","json","jsonAllMovies","results","images","console","log","movieSeach","movieName","dispatch","history","length","alert","element","poster_path","push","moviesGet","current","base_url","backdrop_sizes","getNewMovies","getPopularMovies","upcomingMoviesGet","secondPart","secondPartWithoutNull","filter","Header","useDispatch","useHistory","Search","Input","setIsDarkTheme","setlanguage","Option","Select","Logo","to","placeholder","onSearch","serchMovie","onClick","defaultValue","onChange","setLanguage","DarkThemeWrapper","props","useState","language","children","Provider","loading","movieListSelector","state","movieList","imageUrlFirstPartSelector","imageUrlFirstPart","genreSelector","isLoadingSelector","isLoading","cardSelector","card","imgCardUrlSelector","sortByAlphabetSelector","createSelector","slice","sort","b","title","sortByPopularSelector","popularity","sortByRateSelector","vote_average","UpcomingMovies","imageUrlSecondPart","setImageUrlSecondPart","useSelector","getUpcomingMovies","useCallback","moviesUrl","imageRefFirst","useRef","imageRefSecond","imageRefThird","imageRefThourth","i","useEffect","color","fontSize","ref","MoviesInfo","showCard","movie","showCardAction","matchGenre","id","genr","name","byAlphabet","byAlphabetAction","byPopularAction","byRateAction","genre_ids","release_date","Movielist","getMovies","defaultCurrent","total","defaultPageSize","MovieCard","backdrop_path","overview","NewMovies","PopularMovies","SearchMovies","Navigation","path","exact","render","routerProps","from","App","initialState","search","store","createStore","action","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.67847eb6.chunk.js","sourcesContent":["export const media = [{\r\n    src: 'https://cdn1.iconfinder.com/data/icons/social-media-2285/512/Colored_Facebook3_svg-256.png',\r\n    alt: 'facebook',\r\n    href: 'https://www.facebook.com'\r\n},\r\n    {\r\n        src: 'https://cdn2.iconfinder.com/data/icons/social-media-2285/512/1_Instagram_colored_svg_1-256.png',\r\n        alt: 'instagram',\r\n        href: 'https://www.instagram.com/?hl=uk'\r\n    },\r\n    {\r\n        src: 'https://cdn2.iconfinder.com/data/icons/social-media-2285/512/1_Twitter3_colored_svg-256.png',\r\n        alt: 'twitter',\r\n        href: 'https://twitter.com/explore'\r\n    },\r\n    {\r\n        src: 'https://cdn1.iconfinder.com/data/icons/logotypes/32/youtube-256.png',\r\n        alt: 'youtube',\r\n        href: 'https://www.youtube.com'\r\n    }];\r\nexport const apiKey = 'cbb18a41a0a291345fd02b2d1463ee0f';\r\n\r\n","import LocalizedStrings from 'react-localization';\r\n\r\nexport const strings = new LocalizedStrings({\r\n        uk: {\r\n            enterMovie: \"Введіть назву фільма\",\r\n            notFound: \"Жодного фільму за введеною назвою не знайдено\",\r\n            main:\"Головна\",\r\n            new:\"Новинки\",\r\n            popular:\"Популярні\",\r\n            input:\"Введіть назву фільма\",\r\n            byAlfabet:\"Алфавітом\",\r\n            byPopular:\"Популярністю\",\r\n            byRate:\"Рейтингом\",\r\n            dark:\"Темна тема\",\r\n            light:\"Світла тема\",\r\n            soon:\"Скоро на екранах\",\r\n            best:\"Найкращі фільми за рейтингом\",\r\n            result:\"Результат пошуку\",\r\n            socialNetwork:\"Ми в соціальаних мережах:\",\r\n            genre:\"Жанр:\",\r\n            date:\"Дата виходу -\",\r\n            rate:\"Рейтинг -\",\r\n        },\r\n        ru: {\r\n            enterMovie: \"Введите название фильма\",\r\n            notFound: \"С указаным названием нет ни одного фильма\",\r\n            main:\"Главная\",\r\n            new:\"Новинки\",\r\n            popular:\"Популярные\",\r\n            input:\"Введите название фильма\",\r\n            byAlfabet:\"Алфавитом\",\r\n            byPopular:\"Популярностью\",\r\n            byRate:\"Рейтингом\",\r\n            dark:\"Тёмная тема\",\r\n            light:\"Светлая тема\",\r\n            soon:\"Скоро на экранах\",\r\n            best:\"Лучшие фильмы  по рейтингу\",\r\n            result:\"Результат поиска\",\r\n            socialNetwork:\"Мы в cоциальных сетях:\",\r\n            genre:\"Жанр:\",\r\n            date:\"Дата выхода -\",\r\n            rate:\"Рейтинг -\",\r\n        },\r\n        en: {\r\n            enterMovie: \"Please enter a name of movie\",\r\n            notFound: \"There aren't any movies for the title that you entered\",\r\n            main:\"Main\",\r\n            new:\"New movies\",\r\n            popular:\"Popular movies\",\r\n            byPopular:\"Popular\",\r\n            byRate:\"Rate\",\r\n            input:\"Please enter movie name\",\r\n            byAlfabet:\"Alfabet\",\r\n            dark:\"Dark theme\",\r\n            light:\"Light theme\",\r\n            soon:\"Coming soon\",\r\n            best:\"The best movies\",\r\n            result:\"Search results\",\r\n            socialNetwork:\"We are in social networks:\",\r\n            genre:\"Genre:\",\r\n            date:\"Release date -\",\r\n            rate:\"Rate -\",\r\n        },\r\n\r\n    }\r\n)","import {createContext} from \"react\";\r\nexport const DarkThemeContext=createContext([{}, ()=>{}]);\r\nexport const LanguageContext=createContext([{}, ()=>{}]);","import React, {useContext} from 'react';\r\nimport {media} from \"../../constants/Menu\";\r\nimport './Footer.scss';\r\nimport {strings} from \"../../strings/strings\";\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\n\r\nexport const Footer = () => {\r\n    const [isDarkTheme] = useContext(DarkThemeContext);\r\n    return (\r\n        <div className={`${isDarkTheme && 'darks'} footer`}>\r\n            <div className=\"footer-media\">{strings.socialNetwork}</div>\r\n            <div className=\"footer-media\">\r\n                {\r\n                    media.map(value => {\r\n                        return (\r\n                            <a href={value.href} key={value.src} className=\"footer-media\" target=\"blanket\">\r\n                                <img src={value.src} alt={value.alt} className=\"footer-media-icons\"/>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import {\r\n    BY_ALPHABET, BY_POPULAR, BY_RATE,\r\n    END_LOADING,\r\n    GET_GENRE,\r\n    GET_IMAGE,\r\n    GET_MOVIES,\r\n    IMAGE_CARD, SEARCH_MOVIE,\r\n    SHOW_CARD,\r\n    START_LOADING\r\n} from \"./action-types\";\r\n\r\nexport const startLoadingAction=()=>{\r\nreturn({\r\ntype: START_LOADING,\r\npayload: true\r\n})\r\n};\r\nexport const getMoviesAction=(movies)=>{\r\nreturn({\r\ntype: GET_MOVIES,\r\npayload: movies\r\n})\r\n};\r\nexport const getImageAction=(firstPartUrl)=>{\r\nreturn({\r\ntype: GET_IMAGE,\r\npayload: firstPartUrl\r\n})\r\n};\r\nexport const getImageCardAction=(imgCardUrl)=>{\r\nreturn({\r\ntype: IMAGE_CARD,\r\npayload: imgCardUrl\r\n})\r\n};\r\nexport const getGenreAction=(genres)=>{\r\nreturn({\r\ntype: GET_GENRE,\r\npayload: genres\r\n})\r\n};\r\nexport const endLoadingAction=()=>{\r\n    return({\r\n        type: END_LOADING,\r\n        payload: false\r\n    })\r\n};\r\nexport const showCardAction=(movie)=>{\r\n    return({\r\n        type: SHOW_CARD,\r\n        payload: movie\r\n    })\r\n};\r\nexport const byAlphabetAction=(byAlphabet)=>{\r\n    return({\r\n        type: BY_ALPHABET,\r\n        payload: byAlphabet\r\n    })\r\n};\r\nexport const byPopularAction=(byPopular)=>{\r\n    return({\r\n        type: BY_POPULAR,\r\n        payload: byPopular\r\n    })\r\n};\r\nexport const byRateAction=(byRate)=>{\r\n    return({\r\n        type: BY_RATE,\r\n        payload: byRate\r\n    })\r\n};\r\nexport const searchMovieAction=(copyResults)=>{\r\n    return({\r\n        type: SEARCH_MOVIE,\r\n        payload: copyResults\r\n    })\r\n};\r\n","export const START_LOADING=\"START_LOADING\";\r\nexport const END_LOADING=\"END_LOADING\";\r\nexport const SEARCH_MOVIE=\"SEARCH_MOVIE\";\r\nexport const GET_MOVIES=\"GET_MOVIES\";\r\nexport const GET_IMAGE=\"GET_IMAGE\";\r\nexport const IMAGE_CARD=\"IMAGE_CARD\";\r\nexport const GET_GENRE=\"GET_GENRE\";\r\nexport const SHOW_CARD=\"SHOW_CARD\";\r\nexport const BY_ALPHABET=\"BY_ALPHABET\";\r\nexport const BY_POPULAR=\"BY_POPULAR\";\r\nexport const BY_RATE=\"BY_RATE\";\r\n","import {\r\n    endLoadingAction, getGenreAction,\r\n    getImageAction, getImageCardAction,\r\n    getMoviesAction,\r\n    searchMovieAction,\r\n    startLoadingAction\r\n} from \"../actions/actions\";\r\nimport {strings} from \"../strings/strings\";\r\nimport {apiKey} from \"../constants/Menu\";\r\n\r\nexport const requestFunction = async (argument) => {\r\n    try {\r\n        const requestAllMovies = await fetch(argument);\r\n        const jsonAllMovies = await requestAllMovies.json();\r\n        const {results, images, genres} = jsonAllMovies;\r\n        if (results) return results;\r\n        if (images) return images;\r\n        else return genres;\r\n    } catch (e) {\r\n        return console.log(e);\r\n    }\r\n};\r\nexport const movieSeach = async (movieName, dispatch, history) => {\r\n    dispatch(startLoadingAction());\r\n    if (movieName.length === 0) {\r\n        alert(strings.enterMovie);\r\n        dispatch(endLoadingAction());\r\n        return\r\n    }\r\n    const results = await requestFunction(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${movieName}&page=1&include_adult=false`);\r\n    const copyResults = [];\r\n    for (const element of results) {\r\n        if (element.poster_path !== null) copyResults.push(element)\r\n    }\r\n    if (copyResults.length === 0) {\r\n        alert(strings.notFound);\r\n    }\r\n    dispatch(searchMovieAction(copyResults));\r\n    dispatch(endLoadingAction());\r\n    history.push(\"/search\");\r\n};\r\nexport const moviesGet = async (current, dispatch) => {\r\n    dispatch(startLoadingAction());\r\n    const results = await requestFunction(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${current}`);\r\n    const copyResults = [];\r\n    for (const element of results) {\r\n        if (element.poster_path !== null) copyResults.push(element)\r\n    }\r\n    dispatch(getMoviesAction(copyResults));\r\n    const images = await requestFunction(`https://api.themoviedb.org/3/configuration?api_key=${apiKey}`);\r\n    const {base_url, backdrop_sizes} = images;\r\n    const firstPartUrl = base_url + backdrop_sizes[0];\r\n    const imgCardUrl = base_url + backdrop_sizes[3];\r\n    dispatch(getImageAction(firstPartUrl));\r\n    dispatch(getImageCardAction(imgCardUrl));\r\n    const genres = await requestFunction(`https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`);\r\n    dispatch(getGenreAction(genres));\r\n    dispatch(endLoadingAction());\r\n};\r\nexport const getNewMovies = async (current, dispatch) => {\r\n    dispatch(startLoadingAction());\r\n    const results = await requestFunction(`https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=${current}`);\r\n    const copyResults = [];\r\n    for (const element of results) {\r\n        if (element.poster_path !== null) copyResults.push(element)\r\n    }\r\n    dispatch(getMoviesAction(copyResults));\r\n    dispatch(endLoadingAction());\r\n};\r\nexport const getPopularMovies = async (current, dispatch) => {\r\n    dispatch(startLoadingAction());\r\n    const results = await requestFunction(`https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=${current}`);\r\n    const copyResults = [];\r\n    for (const element of results) {\r\n        if (element.poster_path !== null) copyResults.push(element)\r\n    }\r\n    dispatch(getMoviesAction(copyResults));\r\n    dispatch(endLoadingAction());\r\n};\r\nexport const upcomingMoviesGet = async () => {\r\n    const results = await requestFunction(`https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`);\r\n    const secondPart = [];\r\n    results.map(value =>\r\n        secondPart.push(value.poster_path)\r\n    );\r\n    const secondPartWithoutNull = secondPart.filter((value) => {\r\n        return value !== null\r\n    });\r\n    return (secondPartWithoutNull);\r\n};","import React, {useContext} from 'react';\r\nimport './Header.scss';\r\nimport Logo from \"../../assets/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\nimport {movieSeach} from \"../../function\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Input, Select } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {strings} from \"../../strings/strings\";\r\n\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {Search} = Input;\r\n    const serchMovie = (value) => {\r\n        movieSeach(value, dispatch, history)\r\n    }\r\n    const [isDarkTheme, setIsDarkTheme] = useContext(DarkThemeContext);\r\n    const [, setlanguage] = useContext(DarkThemeContext);\r\n    const toogleTheme = () => {\r\n        setIsDarkTheme(!isDarkTheme);\r\n    }\r\n    const {Option} = Select;\r\n    const changeLanguage = (value) => {\r\n        strings.setLanguage(value);\r\n        setlanguage(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={Logo} className=\"header-logo\" alt=\"logo\"/>\r\n            <div className=\"header-menu\">\r\n                <NavLink className=\"header-menu-link\" to=\"/\">{strings.main}</NavLink>\r\n                <NavLink className=\"header-menu-link\" to=\"/new-movies\">{strings.new}</NavLink>\r\n                <NavLink className=\"header-menu-link\" to=\"/popular\">{strings.popular}</NavLink>\r\n            </div>\r\n            <Search\r\n                placeholder={strings.input}\r\n                onSearch={value => serchMovie(value)}\r\n            />\r\n            <div className=\"toggle\" onClick={toogleTheme}>\r\n                <input className=\"toggleInput\" type=\"checkbox\"/>\r\n                <label className=\"onbtn\">{isDarkTheme ? strings.dark : strings.light}</label>\r\n            </div>\r\n            <div>\r\n                <Select defaultValue=\"en\" onChange={changeLanguage}>\r\n                    <Option value=\"en\">English</Option>\r\n                    <Option value=\"uk\">Українська</Option>\r\n                    <Option value=\"ru\">Русский</Option>\r\n                </Select>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {DarkThemeContext, LanguageContext} from \"../../dark-theme-context/DarkThemeContext\";\r\n\r\nexport const DarkThemeWrapper = (props) => {\r\n    const [isDarkTheme, setIsDarkTheme] = useState(true);\r\n    const [language, setlanguage] = useState('en');\r\n    const {children} = props;\r\n    return (\r\n        <DarkThemeContext.Provider value={[isDarkTheme, setIsDarkTheme]}>\r\n            <LanguageContext.Provider value={[language, setlanguage]}>\r\n                {children}\r\n            </LanguageContext.Provider>\r\n        </DarkThemeContext.Provider>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport './Loading.scss'\r\n\r\nexport const loading = () => {\r\n    return (\r\n        <div className=\"load\">\r\n            <div className=\"lds-default\">\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import { createSelector } from 'reselect'\r\n\r\n\r\nexport const movieListSelector=state => state.movieList;\r\nexport const imageUrlFirstPartSelector=state => state.imageUrlFirstPart;\r\nexport const genreSelector=state => state.genre;\r\nexport const isLoadingSelector=state => state.isLoading;\r\nexport const cardSelector=state => state.card;\r\nexport const imgCardUrlSelector=state => state.imgCardUrl;\r\nexport const sortByAlphabetSelector=createSelector(\r\n    movieListSelector,\r\n    (movieList)=>(movieList.slice().sort((a, b) => a.title > b.title ? 1 : -1))\r\n);\r\nexport const sortByPopularSelector=createSelector(\r\n    movieListSelector,\r\n    (movieList)=>(movieList.slice().sort((a, b) => a.popularity > b.popularity ? -1 : 1))\r\n);\r\nexport const sortByRateSelector=createSelector(\r\n    movieListSelector,\r\n    (movieList)=>(movieList.slice().sort((a, b) => a.vote_average > b.vote_average ? -1 : 1))\r\n);","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './UpcomingMovies.scss';\r\nimport {loading} from \"../loading/Loading\";\r\nimport {upcomingMoviesGet} from \"../../function\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport {imageUrlFirstPartSelector, isLoadingSelector} from \"../../store/selectors\";\r\nimport {strings} from \"../../strings/strings\";\r\nimport {endLoadingAction} from \"../../actions/actions\";\r\n\r\nexport const UpcomingMovies = () => {\r\n    const [imageUrlSecondPart, setImageUrlSecondPart] = useState([]);\r\n    const imageUrlFirstPart = useSelector(imageUrlFirstPartSelector);\r\n    const isLoading = useSelector(isLoadingSelector);\r\n    const dispatch = useDispatch();\r\n    const getUpcomingMovies = useCallback(async () => {\r\n        setImageUrlSecondPart(await upcomingMoviesGet());\r\n        dispatch(endLoadingAction());\r\n    }, [dispatch]);\r\n\r\n    const moviesUrl = imageUrlSecondPart.map(value => imageUrlFirstPart + value);\r\n    const imageRefFirst = useRef();\r\n    const imageRefSecond = useRef();\r\n    const imageRefThird = useRef();\r\n    const imageRefThourth = useRef();\r\n\r\n    let i = 0;\r\n    const sliderLeft = () => {\r\n        (i - 1 < 0) ? i = moviesUrl.length - 4\r\n            : i = i - 1;\r\n        imageRefFirst.current.src = moviesUrl[i];\r\n        imageRefSecond.current.src = moviesUrl[i + 1];\r\n        imageRefThird.current.src = moviesUrl[i + 2];\r\n        imageRefThourth.current.src = moviesUrl[i + 3];\r\n    };\r\n    const sliderRight = () => {\r\n        (i + 4 > moviesUrl.length - 1) ? i = 0\r\n            : i = i + 1;\r\n        imageRefFirst.current.src = moviesUrl[i];\r\n        imageRefSecond.current.src = moviesUrl[i + 1];\r\n        imageRefThird.current.src = moviesUrl[i + 2];\r\n        imageRefThourth.current.src = moviesUrl[i + 3];\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUpcomingMovies();\r\n    }, [getUpcomingMovies]);\r\n    return (\r\n        <div>\r\n            {(isLoading && loading()) ||\r\n            <div className=\"divka\">\r\n                <h1>{strings.soon}</h1>\r\n                <div className=\"pictures\">\r\n                    <ArrowBackIosIcon color=\"disabled\" fontSize=\"large\" onClick={sliderLeft}/>\r\n                    <img ref={imageRefFirst} className=\"pictures-image\" src={moviesUrl[0]} alt=\"зображення фільму\"/>\r\n                    <img ref={imageRefSecond} className=\"pictures-image\" src={moviesUrl[1]} alt=\"зображення фільму\"/>\r\n                    <img ref={imageRefThird} className=\"pictures-image\" src={moviesUrl[2]} alt=\"зображення фільму\"/>\r\n                    <img ref={imageRefThourth} className=\"pictures-image\" src={moviesUrl[3]} alt=\"зображення фільму\"/>\r\n                    <ArrowForwardIosIcon color=\"disabled\" fontSize=\"large\" onClick={sliderRight}/>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useContext} from 'react';\r\nimport {loading} from \"../loading/Loading\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport './MoviesInfo.scss';\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\nimport {\r\n    movieListSelector,\r\n    imageUrlFirstPartSelector,\r\n    genreSelector,\r\n    isLoadingSelector,\r\n    sortByAlphabetSelector, sortByPopularSelector, sortByRateSelector\r\n} from \"../../store/selectors\";\r\nimport {strings} from \"../../strings/strings\";\r\nimport {byAlphabetAction, byPopularAction, byRateAction, showCardAction} from \"../../actions/actions\";\r\n\r\nexport const MoviesInfo = () => {\r\n    const [isDarkTheme] = useContext(DarkThemeContext);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const movieList = useSelector(movieListSelector);\r\n    const imageUrlFirstPart = useSelector(imageUrlFirstPartSelector);\r\n    const genre = useSelector(genreSelector);\r\n    const isLoading = useSelector(isLoadingSelector);\r\n    const render = () => {\r\n        return (movieList.map(value => {\r\n            return (<div key={value.id} className=\"box-one\" onClick={() => showCard(value)}>\r\n                    <div className=\"cardss\">\r\n                        <div>\r\n                            <img className=\"cardss-img\" src={imageUrlFirstPart + value.poster_path}\r\n                                 loading=\"lazy\"\r\n                                 alt=\"зображення фільму\"/>\r\n                        </div>\r\n                        <div className=\"cardss-title\">\r\n                            <h3>{value.title}</h3>\r\n                        </div>\r\n                        <ul className=\"cardss-movie-gen\">\r\n                            <li>{strings.genre}{matchGenre(value.genre_ids)}</li>\r\n                            <li>{strings.date}{value.release_date}</li>\r\n                            <li>{strings.rate}{value.vote_average}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }))\r\n    };\r\n\r\n    const showCard = (movie) => {\r\n        dispatch(showCardAction(movie));\r\n        history.push(`/movie/${movie.title}`);\r\n    };\r\n    const matchGenre = (value) => {\r\n        return value.map(id => {\r\n            return genre.map(genr => {\r\n                if (genr.id === id)\r\n                    return (\r\n                        <span key={genr.id}>{genr.name} </span>\r\n                    )\r\n                else\r\n                    return null;\r\n            })\r\n        })\r\n    };\r\n    const byAlphabet = useSelector(sortByAlphabetSelector);\r\n    const sortByAlphabet = () => {\r\n        dispatch(byAlphabetAction(byAlphabet));\r\n    };\r\n    const byPopular = useSelector(sortByPopularSelector);\r\n    const sortByPopular = () => {\r\n        dispatch(byPopularAction(byPopular));\r\n    };\r\n    const byRate = useSelector(sortByRateSelector);\r\n    const sortByRate = () => {\r\n        dispatch(byRateAction(byRate));\r\n    };\r\n    return (\r\n        <div className={`${isDarkTheme && 'dark'}`}>\r\n            <div className=\"sort\">\r\n                <h3>Сортувати за</h3>\r\n                <button className=\"my-buttons\" onClick={sortByAlphabet}>{strings.byAlfabet}</button>\r\n                <button className=\"my-buttons\" onClick={sortByPopular}>{strings.byPopular}</button>\r\n                <button className=\"my-buttons\" onClick={sortByRate}>{strings.byRate}</button>\r\n            </div>\r\n            <div className=\"box\">\r\n                {(isLoading && loading()) ||\r\n                render()\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useCallback, useContext, useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport './Movielist.scss';\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\nimport {UpcomingMovies} from \"../upcoming-movies/UpcomingMovies\";\r\nimport {moviesGet} from \"../../function\";\r\nimport {MoviesInfo} from \"../movies-info/MoviesInfo\";\r\nimport {Pagination} from \"antd\";\r\n\r\nexport const Movielist = () => {\r\n    const dispatch = useDispatch();\r\n    const getMovies = useCallback((current) => moviesGet(current, dispatch), [dispatch]);\r\n    const [isDarkTheme] = useContext(DarkThemeContext);\r\n    useEffect(() => {\r\n        getMovies();\r\n    }, [getMovies]);\r\n\r\n    return (\r\n        <div className={`${isDarkTheme && 'dark'}`}>\r\n            <UpcomingMovies/>\r\n            <div className=\"pagin\">\r\n                <Pagination\r\n                    defaultCurrent={1}\r\n                    total={10}\r\n                    onChange={(current) => getMovies(current)}\r\n                    defaultPageSize={1}\r\n                />\r\n            </div>\r\n            <MoviesInfo/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useContext} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport './MovieCard.scss';\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\nimport {loading} from \"../loading/Loading\";\r\nimport {cardSelector, genreSelector, imgCardUrlSelector, isLoadingSelector} from \"../../store/selectors\";\r\nimport {strings} from \"../../strings/strings\";\r\n\r\nexport const MovieCard = () => {\r\n    const card = useSelector(cardSelector);\r\n    const genre = useSelector(genreSelector);\r\n    const imgCardUrl = useSelector(imgCardUrlSelector);\r\n    const isLoading = useSelector(isLoadingSelector);\r\n    const matchGenre = (value) => {\r\n        return value.map(id => {\r\n            return genre.map(genr => {\r\n                if (genr.id === id) {\r\n                    return (\r\n                        <span key={genr.id}>{genr.name} </span>\r\n                    )\r\n                } else return null;\r\n            })\r\n        })\r\n    };\r\n    const [isDarkTheme] = useContext(DarkThemeContext);\r\n    return (\r\n        <div className={`${isDarkTheme && 'darks'}`}>\r\n            {(isLoading && loading()) ||\r\n            <div className=\"container\">\r\n                <div className=\"movie\">\r\n                    <div>\r\n                        <img className=\"movie-img\" src={imgCardUrl + card.backdrop_path}\r\n                             alt=\"зображення фільму\"/>\r\n                    </div>\r\n                    <div className=\"movie-title\">\r\n                        <h3>{card.title}</h3>\r\n                    </div>\r\n                    <ul className=\"movie-movie-gen\">\r\n                        <li>{strings.genre}{matchGenre(card.genre_ids)}</li>\r\n                        <li>{strings.date}{card.release_date}</li>\r\n                        <li>{strings.rate}{card.vote_average}</li>\r\n                    </ul>\r\n                    <p className=\"movie-description\">{card.overview}</p>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useCallback, useContext, useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getNewMovies,} from \"../../function\";\r\nimport {MoviesInfo} from \"../movies-info/MoviesInfo\";\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\nimport {Pagination} from \"antd\";\r\nimport {strings} from \"../../strings/strings\";\r\n\r\nexport const NewMovies = () => {\r\n    const dispatch = useDispatch();\r\n    const getMovies = useCallback((current) => getNewMovies(current, dispatch), [dispatch]);\r\n    const [isDarkTheme] = useContext(DarkThemeContext);\r\n    useEffect(() => {\r\n        getMovies();\r\n    }, [getMovies]);\r\n\r\n    return (\r\n        <div className={`${isDarkTheme && 'dark'}`}>\r\n            <h1>{strings.new}</h1>\r\n            <div className=\"pagin\">\r\n                <Pagination\r\n                    defaultCurrent={1}\r\n                    total={10}\r\n                    onChange={(current) => getMovies(current)}\r\n                    defaultPageSize={1}\r\n                />\r\n            </div>\r\n            <MoviesInfo/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useCallback, useContext, useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getPopularMovies} from \"../../function\";\r\nimport {MoviesInfo} from \"../movies-info/MoviesInfo\";\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\nimport {Pagination} from \"antd\";\r\nimport {strings} from \"../../strings/strings\";\r\n\r\nexport const PopularMovies = () => {\r\n    const dispatch = useDispatch();\r\n    const getMovies=useCallback((current)=>getPopularMovies(current, dispatch),[dispatch]);\r\n        const [isDarkTheme] = useContext(DarkThemeContext);\r\n    useEffect(() => {\r\n        getMovies();\r\n    }, [getMovies]);\r\n\r\n    return (\r\n        <div className={`${isDarkTheme && 'dark'}`}>\r\n            <h1>{strings.best}</h1>\r\n            <div className=\"pagin\">\r\n                <Pagination\r\n                    defaultCurrent={1}\r\n                    total={10}\r\n                    onChange={(current) => getMovies(current)}\r\n                    defaultPageSize={1}\r\n                />\r\n            </div>\r\n            <MoviesInfo/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useContext} from 'react';\r\nimport {DarkThemeContext} from \"../../dark-theme-context/DarkThemeContext\";\r\nimport {MoviesInfo} from \"../movies-info/MoviesInfo\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {loading} from \"../loading/Loading\";\r\nimport {isLoadingSelector} from \"../../store/selectors\";\r\nimport {strings} from \"../../strings/strings\";\r\n\r\nexport const SearchMovies =()=> {\r\n    const [isDarkTheme] = useContext(DarkThemeContext);\r\n    const isLoading = useSelector(isLoadingSelector);\r\n\r\n        return (\r\n            <div className={`${isDarkTheme && 'dark'}`}>\r\n                {(isLoading && loading()) ||\r\n                  <div>\r\n                <h1>{strings.result}</h1>\r\n                < MoviesInfo />\r\n                  </div>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Movielist} from \"../movielist/Movielist\";\r\nimport {MovieCard} from \"../movie-card/MovieCard\";\r\nimport {NewMovies} from \"../new-movies/NewMovies\";\r\nimport {PopularMovies} from \"../popular-movies/PopularMovies\";\r\nimport {SearchMovies} from \"../search-movies/SearchMovies\";\r\n\r\nexport const Navigation =()=> {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact\r\n                       render={(routerProps) => {\r\n                           return <Movielist {...routerProps}/>\r\n                       }}/>\r\n                <Route path=\"/movie/:title\" exact\r\n                       render={(routerProps) => {\r\n                           return <MovieCard {...routerProps}/>\r\n                       }}/>\r\n                <Route path=\"/new-movies\" exact\r\n                       render={(routerProps) => {\r\n                           return <NewMovies {...routerProps}/>\r\n                       }}/>\r\n                <Route path=\"/popular\" exact\r\n                       render={(routerProps) => {\r\n                           return <PopularMovies {...routerProps}/>\r\n                       }}/>\r\n                <Route path=\"/search\" exact\r\n                       render={(routerProps) => {\r\n                           return <SearchMovies {...routerProps}/>\r\n                       }}/>\r\n                <Redirect from=\"*\" to=\"/\" exact/>\r\n            </Switch>\r\n        );\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Footer} from \"../footer/Footer\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport {Header} from \"../header/Header\";\r\nimport {DarkThemeWrapper} from \"../dark-theme-wrapper/DarkThemeWrapper\";\r\nimport {Navigation} from \"../navigation/Navigation\";\r\n\r\n\r\nexport function App() {\r\n    return (\r\n        <DarkThemeWrapper>\r\n            <Router>\r\n                <Header/>\r\n                <Navigation/>\r\n                <Footer/>\r\n            </Router>\r\n        </DarkThemeWrapper>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n","import {createStore} from \"redux\";\r\n\r\nconst initialState = {\r\n    movieList: [],\r\n    genre: [],\r\n    isLoading: false,\r\n    imageUrlFirstPart: '',\r\n    card: [],\r\n    search: [],\r\n    imgCardUrl: ''\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_MOVIES':\r\n            return {...state, movieList: action.payload};\r\n        case 'BUTTON':\r\n            return {...state, movieList: action.payload};\r\n        case 'START_LOADING':\r\n            return {...state, isLoading: action.payload};\r\n        case 'END_LOADING':\r\n            return {...state, isLoading: action.payload};\r\n        case 'GET_IMAGE':\r\n            return {...state, imageUrlFirstPart: action.payload};\r\n        case 'GET_GENRE':\r\n            return {...state, genre: action.payload};\r\n        case 'BY_ALPHABET':\r\n            return {...state, movieList: action.payload};\r\n        case 'BY_POPULAR':\r\n            return {...state, movieList: action.payload};\r\n        case 'BY_RATE':\r\n            return {...state, movieList: action.payload};\r\n        case 'SEARCH_MOVIE':\r\n            return {...state, movieList: action.payload};\r\n        case 'SHOW_CARD':\r\n            return {...state, card: action.payload};\r\n        case 'IMAGE_CARD':\r\n            return {...state, imgCardUrl: action.payload};\r\n                    default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const store = createStore(reducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport {Provider} from 'react-redux';\nimport {store} from \"./store\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.c1b9d05a.png\";"],"sourceRoot":""}